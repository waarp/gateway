.. _proto-config-r66:

Configuration R66 & R66-TLS
###########################

Pour l'heure, les configurations protocolaire de R66 et R66-TLS sont identiques.

Configuration client
====================

La structure de l'objet JSON de configuration du protocole pour un client R66
est la suivante :

* **blockSize** (*number*) - La taille (en octets) d'un bloc de données R66.
  Par défaut la valeur `65536` est utilisée.
* **noFinalHash** (*boolean*) - Désactive le contrôle de hash de fin de transfert.
  Par défaut le contrôle est activé.
* **checkBlockHash** (*boolean*) - Active le contrôle de hash sur chaque
  bloc du fichier transféré. Par défaut ce contrôle est désactivé.

**Exemple**

.. code-block:: json

   {
     "blockSize": 65536,
     "noFinalHash": false,
     "checkBlockHash": true
   }

Configuration serveur
=====================

.. deprecated:: 0.7.0

   Utiliser le protocole ``r66-tls`` plutôt que l'option ``isTLS``, qui sera
   supprimé lors d'une version future.

La structure de l'objet JSON de configuration du protocole pour un serveur R66
est la suivante :

* **serverLogin** (*string*) - Le login d'authentification du serveur R66.
  Par défaut, le nom du serveur est utilisé à la place.
* **serverPassword** (*string*) - **REQUIS** Le mot de passe de l'agent R66.
* **isTLS** (*boolean*) - **DÉPRÉCIÉ: utilisez plutôt le protocole r66-tls**
  Spécifie si le serveur utilise TLS. Par défaut, R66 clair est utilisé.
* **blockSize** (*number*) - La taille (en octets) d'un bloc de données R66.
  Par défaut la valeur `65536` est utilisée.
* **noFinalHash** (*boolean*) - Désactive le contrôle de hash de fin de transfert.
  Par défaut le contrôle est activé.
* **checkBlockHash** (*boolean*) - Active le contrôle de hash sur chaque
  bloc du fichier transféré. Par défaut ce contrôle est désactivé.

**Exemple**

.. code-block:: json

   {
     "blockSize": 65536,
     "serverLogin": "foobar",
     "serverPassword": "sesame",
     "noFinalHash": false,
     "checkBlockHash": true
   }


Configuration partenaire
========================

.. deprecated:: 0.7.0

   Utiliser le protocole ``r66-tls`` plutôt que l'option ``isTLS``, qui sera
   supprimé lors d'une version future.

La structure de l'objet JSON de configuration du protocole pour un partenaire
R66 est la suivante :

* **serverLogin** (*string*) - Le login d'authentification attendu pour le
  partenaire R66. Par défaut, le nom du partenaire est utilisé à la place.
* **serverPassword** (*string*) - **REQUIS** Le mot de passe de l'agent R66.
* **isTLS** (*boolean*) - **DÉPRÉCIÉ: utilisez plutôt le protocole r66-tls**
  Spécifie si le serveur utilise TLS. Par défaut, R66 clair est utilisé.
* **blockSize** (*number*) - La taille (en octets) d'un bloc de données R66.
  Par défaut la valeur `65536` est utilisée.
* **noFinalHash** (*boolean*) - Désactive le contrôle de hash de fin de transfert.
  Par défaut le contrôle est activé.
* **checkBlockHash** (*boolean*) - Active le contrôle de hash sur chaque
  bloc du fichier transféré. Par défaut ce contrôle est désactivé.

**Exemple**

.. code-block:: json

   {
     "blockSize": 65536,
     "serverLogin": "foobar",
     "serverPassword": "sesame",
     "noFinalHash": false,
     "checkBlockHash": true
   }

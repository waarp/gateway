// Code generated by "stringer -type=TransferErrorCode"; DO NOT EDIT.

package types

import (
	"strconv"
)

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TeOk-0]
	_ = x[TeUnknown-1]
	_ = x[TeInternal-2]
	_ = x[TeUnimplemented-3]
	_ = x[TeConnection-4]
	_ = x[TeConnectionReset-5]
	_ = x[TeUnknownRemote-6]
	_ = x[TeExceededLimit-7]
	_ = x[TeBadAuthentication-8]
	_ = x[TeDataTransfer-9]
	_ = x[TeIntegrity-10]
	_ = x[TeFinalization-11]
	_ = x[TeExternalOperation-12]
	_ = x[TeWarning-13]
	_ = x[TeStopped-14]
	_ = x[TeCanceled-15]
	_ = x[TeFileNotFound-16]
	_ = x[TeForbidden-17]
	_ = x[TeBadSize-18]
	_ = x[TeShuttingDown-19]
	_ = x[endoferrorcodes-20]
}

const _TransferErrorCode_name = "TeOkTeUnknownTeInternalTeUnimplementedTeConnectionTeConnectionResetTeUnknownRemoteTeExceededLimitTeBadAuthenticationTeDataTransferTeIntegrityTeFinalizationTeExternalOperationTeWarningTeStoppedTeCanceledTeFileNotFoundTeForbiddenTeBadSizeTeShuttingDownendoferrorcodes"

var _TransferErrorCode_index = [...]uint16{0, 4, 13, 23, 38, 50, 67, 82, 97, 116, 130, 141, 155, 174, 183, 192, 202, 216, 227, 236, 250, 265}

func (tec TransferErrorCode) String() string {
	if tec >= TransferErrorCode(len(_TransferErrorCode_index)-1) {
		return "TransferErrorCode(" + strconv.FormatInt(int64(tec), 10) + ")"
	}
	return _TransferErrorCode_name[_TransferErrorCode_index[tec]:_TransferErrorCode_index[tec+1]]
}
